version: '3.2'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
    - 9193:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --web.enable-admin-api
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
    - discovery.type=single-node
    ports:
    - 9200:9200
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
    - 2181:2181
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
    - 9092:9092
    - 9093:9093
    environment:
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
    - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
    - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
    - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    - KAFKA_CREATE_TOPICS=test:1:1
    - KAFKA_BROKER_ID=1
    depends_on:
      - "zookeeper"
  kafka_gui:
    image: 'obsidiandynamics/kafdrop:latest'
    ports:
    - 9000:9000
    environment:
    - KAFKA_BROKERCONNECT=kafka:9092
    depends_on:
    - "kafka"